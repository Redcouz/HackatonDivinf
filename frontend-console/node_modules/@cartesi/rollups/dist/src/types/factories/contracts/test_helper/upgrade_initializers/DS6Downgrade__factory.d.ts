import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS6Downgrade, DS6DowngradeInterface } from "../../../../contracts/test_helper/upgrade_initializers/DS6Downgrade";
type DS6DowngradeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS6Downgrade__factory extends ContractFactory {
    constructor(...args: DS6DowngradeConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS6Downgrade>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS6Downgrade;
    connect(signer: Signer): DS6Downgrade__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b50608d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806306ce466414602d575b600080fd5b605560007fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc55565b00fea26469706673582212203630b77c08ed2d26ffc473a14c04ec40222e074524aa16b27529c757246e991c64736f6c634300080d0033";
    static readonly abi: {
        inputs: any[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DS6DowngradeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS6Downgrade;
}
export {};
