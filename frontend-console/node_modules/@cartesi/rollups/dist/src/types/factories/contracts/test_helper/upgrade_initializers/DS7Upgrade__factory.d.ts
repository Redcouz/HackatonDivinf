import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS7Upgrade, DS7UpgradeInterface } from "../../../../contracts/test_helper/upgrade_initializers/DS7Upgrade";
type DS7UpgradeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS7Upgrade__factory extends ContractFactory {
    constructor(...args: DS7UpgradeConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS7Upgrade>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS7Upgrade;
    connect(signer: Signer): DS7Upgrade__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063027f53bf14602d575b600080fd5b607660383660046078565b7fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc80546001600160801b03928316600160801b029216919091179055565b005b600060208284031215608957600080fd5b81356001600160801b0381168114609f57600080fd5b939250505056fea2646970667358221220d4e0977514d393e00723d2ea3590ae1ecfeee63a9ef106e55daa9ecb28fe564164736f6c634300080d0033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DS7UpgradeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS7Upgrade;
}
export {};
