import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS4Upgrade, DS4UpgradeInterface } from "../../../../contracts/test_helper/upgrade_initializers/DS4Upgrade";
type DS4UpgradeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS4Upgrade__factory extends ContractFactory {
    constructor(...args: DS4UpgradeConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS4Upgrade>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS4Upgrade;
    connect(signer: Signer): DS4Upgrade__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b5060c88061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063d55ec69714602d575b600080fd5b7ff85303be6bcde94f0463a6aa7a400c61c189a370c649530913625784ad517b1c547fff42502b340deee9bf2882182aa543c5e13678ef8c456702ec177872cd324d08805464010000000090920463ffffffff1663ffffffff1990921691909117905500fea2646970667358221220f8f61065ead49ea231508e1e458ef69d285f21f0ee33991fe309fe2f6a1ce13064736f6c634300080d0033";
    static readonly abi: {
        inputs: any[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DS4UpgradeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS4Upgrade;
}
export {};
