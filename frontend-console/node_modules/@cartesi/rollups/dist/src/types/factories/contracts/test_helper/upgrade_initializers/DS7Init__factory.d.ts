import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS7Init, DS7InitInterface } from "../../../../contracts/test_helper/upgrade_initializers/DS7Init";
type DS7InitConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS7Init__factory extends ContractFactory {
    constructor(...args: DS7InitConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS7Init>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS7Init;
    connect(signer: Signer): DS7Init__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060f18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a191fe2814602d575b600080fd5b60706038366004608d565b6001600160801b03908116600160801b029116177fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc55565b005b80356001600160801b0381168114608857600080fd5b919050565b60008060408385031215609f57600080fd5b60a6836072565b915060b2602084016072565b9050925092905056fea26469706673582212208fd7ad0c8485049cfa5df0106cf17a059da898f5ac19280c60b432237607d84764736f6c634300080d0033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DS7InitInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS7Init;
}
export {};
