import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS2Facet, DS2FacetInterface } from "../../../../contracts/test_helper/facets/DS2Facet";
type DS2FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS2Facet__factory extends ContractFactory {
    constructor(...args: DS2FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS2Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS2Facet;
    connect(signer: Signer): DS2Facet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506101e6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b7f1665146100515780631468db5e146100885780635197c7aa146100d1578063ff22c8f8146100fa575b600080fd5b60008051602061019183398151915254600160401b900463ffffffff1660405163ffffffff90911681526020015b60405180910390f35b6100cf610096366004610139565b60008051602061019183398151915280546bffffffff00000000000000001916600160401b63ffffffff90931692909202919091179055565b005b6000805160206101918339815191525460405167ffffffffffffffff909116815260200161007f565b6100cf610108366004610166565b600080516020610191833981519152805467ffffffffffffffff191667ffffffffffffffff92909216919091179055565b60006020828403121561014b57600080fd5b813563ffffffff8116811461015f57600080fd5b9392505050565b60006020828403121561017857600080fd5b813567ffffffffffffffff8116811461015f57600080fdfee4ee398a3d02354d9a3ac168ae8277dc2d94a1d705b084735cf8863231e2654fa2646970667358221220d10db9977482aa5b1c5eb828ed1a6aa02c8e86015f42e6616bc9ddafe66f247b64736f6c634300080d0033";
    static readonly abi: ({
        inputs: any[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): DS2FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS2Facet;
}
export {};
