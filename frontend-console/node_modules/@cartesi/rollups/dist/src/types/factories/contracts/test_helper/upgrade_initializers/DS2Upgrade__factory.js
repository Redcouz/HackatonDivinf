"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DS2Upgrade__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "upgrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b5060e28061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063d55ec69714602d575b600080fd5b7ff85303be6bcde94f0463a6aa7a400c61c189a370c649530913625784ad517b1c547fe4ee398a3d02354d9a3ac168ae8277dc2d94a1d705b084735cf8863231e2654f805463ffffffff8084166bffffffffffffffffffffffff199092169190911764010000000090930416680100000000000000000291909117905500fea26469706673582212208dd719787ec5df43b1331c2ea23f52a4ac31d45ba240309d73aabba752d8bb8164736f6c634300080d0033";
const isSuperArgs = (xs) => xs.length > 1;
class DS2Upgrade__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DS2Upgrade__factory = DS2Upgrade__factory;
DS2Upgrade__factory.bytecode = _bytecode;
DS2Upgrade__factory.abi = _abi;
