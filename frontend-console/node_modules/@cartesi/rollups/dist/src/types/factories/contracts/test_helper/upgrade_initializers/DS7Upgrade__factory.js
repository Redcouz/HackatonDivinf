"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DS7Upgrade__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint128",
                name: "y",
                type: "uint128",
            },
        ],
        name: "upgrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063027f53bf14602d575b600080fd5b607660383660046078565b7fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc80546001600160801b03928316600160801b029216919091179055565b005b600060208284031215608957600080fd5b81356001600160801b0381168114609f57600080fd5b939250505056fea2646970667358221220d4e0977514d393e00723d2ea3590ae1ecfeee63a9ef106e55daa9ecb28fe564164736f6c634300080d0033";
const isSuperArgs = (xs) => xs.length > 1;
class DS7Upgrade__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DS7Upgrade__factory = DS7Upgrade__factory;
DS7Upgrade__factory.bytecode = _bytecode;
DS7Upgrade__factory.abi = _abi;
