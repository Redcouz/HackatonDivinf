import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { DS3Facet, DS3FacetInterface } from "../../../../contracts/test_helper/facets/DS3Facet";
type DS3FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DS3Facet__factory extends ContractFactory {
    constructor(...args: DS3FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DS3Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DS3Facet;
    connect(signer: Signer): DS3Facet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610223806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630b7f1665146100675780631468db5e1461009f5780632f135d0c146100e55780635197c7aa1461010757806389dc616014610122578063eb421e2f14610169575b600080fd5b6000805160206101ce83398151915254640100000000900463ffffffff165b60405163ffffffff909116815260200160405180910390f35b6100e36100ad3660046101a0565b6000805160206101ce833981519152805467ffffffff00000000191664010000000063ffffffff90931692909202919091179055565b005b6000805160206101ce83398151915254600160401b900463ffffffff16610086565b6000805160206101ce8339815191525463ffffffff16610086565b6100e36101303660046101a0565b6000805160206101ce83398151915280546bffffffff00000000000000001916600160401b63ffffffff90931692909202919091179055565b6100e36101773660046101a0565b6000805160206101ce833981519152805463ffffffff191663ffffffff92909216919091179055565b6000602082840312156101b257600080fd5b813563ffffffff811681146101c657600080fd5b939250505056fec47562ccbe325ce9e309f81a37bccc9baa9b4a3de9b8d88bd7e4f2b6e504ca95a264697066735822122072e89e1228a9d36c13be4962b5fa42978c78c1f561e0f74ad4a54404cee36bc264736f6c634300080d0033";
    static readonly abi: ({
        inputs: any[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: any[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): DS3FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DS3Facet;
}
export {};
