/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CartesiMathV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CartesiMathV2__factory>;
    getContractFactory(
      name: "MerkleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleV2__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Bank",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bank__factory>;
    getContractFactory(
      name: "CartesiDApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CartesiDApp__factory>;
    getContractFactory(
      name: "CartesiDAppFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CartesiDAppFactory__factory>;
    getContractFactory(
      name: "ValidatorManagerFacet1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidatorManagerFacet1__factory>;
    getContractFactory(
      name: "DebugFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebugFacet__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "ERC20PortalFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PortalFacet__factory>;
    getContractFactory(
      name: "ERC721PortalFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721PortalFacet__factory>;
    getContractFactory(
      name: "EtherPortalFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPortalFacet__factory>;
    getContractFactory(
      name: "FeeManagerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeManagerFacet__factory>;
    getContractFactory(
      name: "InputFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InputFacet__factory>;
    getContractFactory(
      name: "OutputFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OutputFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "RollupsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RollupsFacet__factory>;
    getContractFactory(
      name: "ValidatorManagerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidatorManagerFacet__factory>;
    getContractFactory(
      name: "IBank",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBank__factory>;
    getContractFactory(
      name: "ICartesiDAppFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICartesiDAppFactory__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20Portal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Portal__factory>;
    getContractFactory(
      name: "IERC721Portal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Portal__factory>;
    getContractFactory(
      name: "IEtherPortal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEtherPortal__factory>;
    getContractFactory(
      name: "IFeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeManager__factory>;
    getContractFactory(
      name: "IInput",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInput__factory>;
    getContractFactory(
      name: "IOutput",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOutput__factory>;
    getContractFactory(
      name: "IRollups",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRollups__factory>;
    getContractFactory(
      name: "IValidatorManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IValidatorManager__factory>;
    getContractFactory(
      name: "LibValidatorManager1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibValidatorManager1__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "LibFeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibFeeManager__factory>;
    getContractFactory(
      name: "LibInput",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibInput__factory>;
    getContractFactory(
      name: "LibRollups",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibRollups__factory>;
    getContractFactory(
      name: "LibValidatorManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibValidatorManager__factory>;
    getContractFactory(
      name: "DS1Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS1Facet__factory>;
    getContractFactory(
      name: "DS2Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS2Facet__factory>;
    getContractFactory(
      name: "DS3Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS3Facet__factory>;
    getContractFactory(
      name: "DS4Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS4Facet__factory>;
    getContractFactory(
      name: "DS5Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS5Facet__factory>;
    getContractFactory(
      name: "DS6Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS6Facet__factory>;
    getContractFactory(
      name: "DS7Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS7Facet__factory>;
    getContractFactory(
      name: "DS8Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS8Facet__factory>;
    getContractFactory(
      name: "DS9Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS9Facet__factory>;
    getContractFactory(
      name: "Foo1Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Foo1Facet__factory>;
    getContractFactory(
      name: "Foo2Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Foo2Facet__factory>;
    getContractFactory(
      name: "SimpleContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleContract__factory>;
    getContractFactory(
      name: "SimpleNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleNFT__factory>;
    getContractFactory(
      name: "SimpleToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleToken__factory>;
    getContractFactory(
      name: "TestLibClaimsMask",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLibClaimsMask__factory>;
    getContractFactory(
      name: "DS1Init",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS1Init__factory>;
    getContractFactory(
      name: "DS2Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS2Upgrade__factory>;
    getContractFactory(
      name: "DS3Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS3Upgrade__factory>;
    getContractFactory(
      name: "DS4Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS4Upgrade__factory>;
    getContractFactory(
      name: "DS6Downgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS6Downgrade__factory>;
    getContractFactory(
      name: "DS6Init",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS6Init__factory>;
    getContractFactory(
      name: "DS6Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS6Upgrade__factory>;
    getContractFactory(
      name: "DS7Downgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS7Downgrade__factory>;
    getContractFactory(
      name: "DS7Init",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS7Init__factory>;
    getContractFactory(
      name: "DS7Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS7Upgrade__factory>;
    getContractFactory(
      name: "DS9Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DS9Upgrade__factory>;
    getContractFactory(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondInit__factory>;

    getContractAt(
      name: "CartesiMathV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CartesiMathV2>;
    getContractAt(
      name: "MerkleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleV2>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Bank",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bank>;
    getContractAt(
      name: "CartesiDApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CartesiDApp>;
    getContractAt(
      name: "CartesiDAppFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CartesiDAppFactory>;
    getContractAt(
      name: "ValidatorManagerFacet1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ValidatorManagerFacet1>;
    getContractAt(
      name: "DebugFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DebugFacet>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "ERC20PortalFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PortalFacet>;
    getContractAt(
      name: "ERC721PortalFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721PortalFacet>;
    getContractAt(
      name: "EtherPortalFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPortalFacet>;
    getContractAt(
      name: "FeeManagerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeManagerFacet>;
    getContractAt(
      name: "InputFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InputFacet>;
    getContractAt(
      name: "OutputFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OutputFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "RollupsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RollupsFacet>;
    getContractAt(
      name: "ValidatorManagerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ValidatorManagerFacet>;
    getContractAt(
      name: "IBank",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBank>;
    getContractAt(
      name: "ICartesiDAppFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICartesiDAppFactory>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20Portal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Portal>;
    getContractAt(
      name: "IERC721Portal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Portal>;
    getContractAt(
      name: "IEtherPortal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEtherPortal>;
    getContractAt(
      name: "IFeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeManager>;
    getContractAt(
      name: "IInput",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInput>;
    getContractAt(
      name: "IOutput",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOutput>;
    getContractAt(
      name: "IRollups",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRollups>;
    getContractAt(
      name: "IValidatorManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IValidatorManager>;
    getContractAt(
      name: "LibValidatorManager1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibValidatorManager1>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "LibFeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibFeeManager>;
    getContractAt(
      name: "LibInput",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibInput>;
    getContractAt(
      name: "LibRollups",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibRollups>;
    getContractAt(
      name: "LibValidatorManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibValidatorManager>;
    getContractAt(
      name: "DS1Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS1Facet>;
    getContractAt(
      name: "DS2Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS2Facet>;
    getContractAt(
      name: "DS3Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS3Facet>;
    getContractAt(
      name: "DS4Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS4Facet>;
    getContractAt(
      name: "DS5Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS5Facet>;
    getContractAt(
      name: "DS6Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS6Facet>;
    getContractAt(
      name: "DS7Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS7Facet>;
    getContractAt(
      name: "DS8Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS8Facet>;
    getContractAt(
      name: "DS9Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS9Facet>;
    getContractAt(
      name: "Foo1Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Foo1Facet>;
    getContractAt(
      name: "Foo2Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Foo2Facet>;
    getContractAt(
      name: "SimpleContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleContract>;
    getContractAt(
      name: "SimpleNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleNFT>;
    getContractAt(
      name: "SimpleToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleToken>;
    getContractAt(
      name: "TestLibClaimsMask",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLibClaimsMask>;
    getContractAt(
      name: "DS1Init",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS1Init>;
    getContractAt(
      name: "DS2Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS2Upgrade>;
    getContractAt(
      name: "DS3Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS3Upgrade>;
    getContractAt(
      name: "DS4Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS4Upgrade>;
    getContractAt(
      name: "DS6Downgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS6Downgrade>;
    getContractAt(
      name: "DS6Init",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS6Init>;
    getContractAt(
      name: "DS6Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS6Upgrade>;
    getContractAt(
      name: "DS7Downgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS7Downgrade>;
    getContractAt(
      name: "DS7Init",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS7Init>;
    getContractAt(
      name: "DS7Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS7Upgrade>;
    getContractAt(
      name: "DS9Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DS9Upgrade>;
    getContractAt(
      name: "DiamondInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondInit>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
