import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BitsManipulation, BitsManipulationInterface } from "../BitsManipulation";
declare type BitsManipulationConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BitsManipulation__factory extends ContractFactory {
    constructor(...args: BitsManipulationConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BitsManipulation>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BitsManipulation;
    connect(signer: Signer): BitsManipulation__factory;
    static readonly bytecode = "0x6105de61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063240034ec1461005b578063bf1924c5146100b0578063ef7c79491461014d578063f69c389b14610160575b600080fd5b61009661006936600461025b565b601881811b63ff00000016600883811c61ff00169084901b62ff0000169390921c60ff1692909217171790565b60405163ffffffff90911681526020015b60405180910390f35b6101356100be366004610294565b603881811b67ff0000000000000016602883811b66ff0000000000001691909117601884811b65ff00000000001691909117600885811b64ff00000000169190911763ff0000009186901c919091161762ff00009185901c919091161761ff009184901c919091161760ff9290911c919091161790565b6040516001600160401b0390911681526020016100a7565b61013561015b3660046102af565b610186565b61017361016e3660046102e2565b6101f0565b60405160039190910b81526020016100a7565b60008281808261019760018761032a565b6001600160401b031660016001600160401b0316901b166001600160401b0316119050600060018560026101cb9190610556565b6101d5919061032a565b905081156101e4578019831792505b50909150505b92915050565b600082818063ffffffff8316610207600187610576565b63ffffffff1660016001600160401b0316901b166001600160401b0316119050600060018560026102389190610593565b6101d59190610576565b803563ffffffff8116811461025657600080fd5b919050565b60006020828403121561026d57600080fd5b61027682610242565b9392505050565b80356001600160401b038116811461025657600080fd5b6000602082840312156102a657600080fd5b6102768261027d565b600080604083850312156102c257600080fd5b6102cb8361027d565b91506102d96020840161027d565b90509250929050565b600080604083850312156102f557600080fd5b82358060030b811461030657600080fd5b91506102d960208401610242565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038381169083168181101561034a5761034a610314565b039392505050565b600181815b8085111561039257816001600160401b030482111561037857610378610314565b8085161561038557918102915b93841c9390800290610357565b509250929050565b600181815b80851115610392578163ffffffff048211156103bd576103bd610314565b808516156103ca57918102915b93841c939080029061039f565b6000826103e6575060016101ea565b816103f3575060006101ea565b8160018114610409576002811461041357610447565b60019150506101ea565b60ff84111561042457610424610314565b6001841b91506001600160401b0382111561044157610441610314565b506101ea565b5060208310610133831016604e8410600b8410161715610481575081810a6001600160401b0381111561047c5761047c610314565b6101ea565b61048b8383610352565b806001600160401b03048211156104a4576104a4610314565b029392505050565b6000826104bb575060016101ea565b816104c8575060006101ea565b816001811461040957600281036105045760ff8411156104ea576104ea610314565b6001841b915063ffffffff82111561044157610441610314565b5060208310610133831016604e8410600b8410161715610536575081810a63ffffffff81111561047c5761047c610314565b610540838361039a565b8063ffffffff048211156104a4576104a4610314565b60006001600160401b0361056e8185168285166103d7565b949350505050565b600063ffffffff8381169083168181101561034a5761034a610314565b600063ffffffff61056e8185168285166104ac56fea26469706673582212201dd62a52b437cd31fedc2bab85d06cf095ff66f81282e388ef34f24091bbdca464736f6c634300080f0033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BitsManipulationInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BitsManipulation;
}
export {};
