"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestCartesiMath__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_num",
                type: "uint256",
            },
        ],
        name: "clz",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_num",
                type: "uint256",
            },
        ],
        name: "ctz",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_num",
                type: "uint256",
            },
        ],
        name: "getLog2Floor",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_num",
                type: "uint256",
            },
        ],
        name: "getLog2TableTimes1M",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_num",
                type: "uint256",
            },
        ],
        name: "isPowerOf2",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061037d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306c8e54b1461005c578063296e7af81461008257806330244f7a1461009557806332ef283b146100a8578063d82ae4b1146100bb575b600080fd5b61006f61006a3660046102c9565b6100de565b6040519081526020015b60405180910390f35b61006f6100903660046102c9565b61015e565b61006f6100a33660046102c9565b6101dc565b61006f6100b63660046102c9565b610217565b6100ce6100c93660046102c9565b610252565b6040519015158152602001610079565b6040516306c8e54b60e01b81526004810182905260009073__$e74161300f6257ab2934e4b08c2b2efd56$__906306c8e54b90602401602060405180830381865af4158015610131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015591906102e2565b60ff1692915050565b60405163052dcf5f60e31b81526004810182905260009073__$e74161300f6257ab2934e4b08c2b2efd56$__9063296e7af8906024015b602060405180830381865af41580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d6919061030c565b92915050565b60405163181227bd60e11b81526004810182905260009073__$e74161300f6257ab2934e4b08c2b2efd56$__906330244f7a90602401610195565b6040516332ef283b60e01b81526004810182905260009073__$e74161300f6257ab2934e4b08c2b2efd56$__906332ef283b90602401610195565b60405163d82ae4b160e01b81526004810182905260009073__$e74161300f6257ab2934e4b08c2b2efd56$__9063d82ae4b190602401602060405180830381865af41580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190610325565b6000602082840312156102db57600080fd5b5035919050565b6000602082840312156102f457600080fd5b815160ff8116811461030557600080fd5b9392505050565b60006020828403121561031e57600080fd5b5051919050565b60006020828403121561033757600080fd5b8151801515811461030557600080fdfea26469706673582212208f63e692c4fe16bc94299299e211307eb4fe90ac29d3b1c0bd20f86a478caa5664736f6c634300080f0033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class TestCartesiMath__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, TestCartesiMath__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$e74161300f6257ab2934e4b08c2b2efd56\\$__", "g"), linkLibraryAddresses["contracts/CartesiMathV2.sol:CartesiMathV2"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestCartesiMath__factory = TestCartesiMath__factory;
TestCartesiMath__factory.bytecode = _bytecode;
TestCartesiMath__factory.abi = _abi;
