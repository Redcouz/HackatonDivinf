/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BitsManipulation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BitsManipulation__factory>;
    getContractFactory(
      name: "BitsManipulationLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BitsManipulationLibrary__factory>;
    getContractFactory(
      name: "CartesiMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CartesiMath__factory>;
    getContractFactory(
      name: "CartesiMathV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CartesiMathV2__factory>;
    getContractFactory(
      name: "Instantiator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Instantiator__factory>;
    getContractFactory(
      name: "InstantiatorImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InstantiatorImpl__factory>;
    getContractFactory(
      name: "InstantiatorImplV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InstantiatorImplV2__factory>;
    getContractFactory(
      name: "InstantiatorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InstantiatorV2__factory>;
    getContractFactory(
      name: "IWorkerAuthManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorkerAuthManager__factory>;
    getContractFactory(
      name: "IWorkerManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorkerManager__factory>;
    getContractFactory(
      name: "Merkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Merkle__factory>;
    getContractFactory(
      name: "MerkleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleV2__factory>;
    getContractFactory(
      name: "TestBitmask",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBitmask__factory>;
    getContractFactory(
      name: "TestCartesiMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCartesiMath__factory>;
    getContractFactory(
      name: "TestMerkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMerkle__factory>;
    getContractFactory(
      name: "UnrolledCordic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnrolledCordic__factory>;
    getContractFactory(
      name: "WorkerAuthManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkerAuthManager__factory>;
    getContractFactory(
      name: "WorkerAuthManagerImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkerAuthManagerImpl__factory>;
    getContractFactory(
      name: "WorkerManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkerManager__factory>;
    getContractFactory(
      name: "WorkerManagerAuthManagerImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkerManagerAuthManagerImpl__factory>;
    getContractFactory(
      name: "WorkerManagerImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkerManagerImpl__factory>;

    getContractAt(
      name: "BitsManipulation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BitsManipulation>;
    getContractAt(
      name: "BitsManipulationLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BitsManipulationLibrary>;
    getContractAt(
      name: "CartesiMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CartesiMath>;
    getContractAt(
      name: "CartesiMathV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CartesiMathV2>;
    getContractAt(
      name: "Instantiator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Instantiator>;
    getContractAt(
      name: "InstantiatorImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InstantiatorImpl>;
    getContractAt(
      name: "InstantiatorImplV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InstantiatorImplV2>;
    getContractAt(
      name: "InstantiatorV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InstantiatorV2>;
    getContractAt(
      name: "IWorkerAuthManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorkerAuthManager>;
    getContractAt(
      name: "IWorkerManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorkerManager>;
    getContractAt(
      name: "Merkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Merkle>;
    getContractAt(
      name: "MerkleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleV2>;
    getContractAt(
      name: "TestBitmask",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBitmask>;
    getContractAt(
      name: "TestCartesiMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCartesiMath>;
    getContractAt(
      name: "TestMerkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMerkle>;
    getContractAt(
      name: "UnrolledCordic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnrolledCordic>;
    getContractAt(
      name: "WorkerAuthManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkerAuthManager>;
    getContractAt(
      name: "WorkerAuthManagerImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkerAuthManagerImpl>;
    getContractAt(
      name: "WorkerManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkerManager>;
    getContractAt(
      name: "WorkerManagerAuthManagerImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkerManagerAuthManagerImpl>;
    getContractAt(
      name: "WorkerManagerImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkerManagerImpl>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
